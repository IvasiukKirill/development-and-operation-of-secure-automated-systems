#define _CRT_SECURE_NO_WARNINGS
// для отключения предупреждений компилятора, связанных с использованием функций, 
//которые могут быть уязвимы для атак переполнения буфера. 
// Конкретно, эта строка отключает предупреждение о небезопасности функций стандартной библиотеки C, таких как strcpy, strcat и т.д.,

#include<stdio.h>  
#include<time.h>
#include<string.h>

int main() { 
	FILE* file; //создается указатель на файл
	const size_t len = 1024; // задается длина массива

	if (fopen_s(&file, "./kerel.ivasiuk", "r+")) { //открываем файл (r+ - чтобы открывать файл для чтения и записи)
		printf_s("Error File not found!"); // сообщение об ошибке в консоль
		getchar(); //чтобы окно не закрывалось сразу (getchar ждет пользовательского ввода)
		return 0;
	}

	char buffer[len] = { 0 }; //создается массив символов
	fread_s(buffer, len, sizeof(char), len, file); //чтение из файла
	printf_s("%s\n", buffer); //вывод того, что в буфере

	time_t rawtime; //действительный арифметический тип, способный представлять времена.
	struct tm info; //cтруктура,содержащая календарную дату и время,разбитые на составляющие.
	time(&rawtime); //Получение текущего времени в секундах от начала эпохи и сохранение его в переменную 
	localtime_s(&info, &rawtime); // передаем структуру info по указателю и записываем в нее то, что лежит в rawtime

	memset(buffer, '\0', len); //зануляем буфер
	strftime(buffer, len, "%Y-%m-%d %H:%M:%S ", &info); //запись времени в нужном нам формате
	

	fseek(file, 0, SEEK_SET); // перевод курсора в начало файла
	fwrite(buffer, sizeof(char), len, file); //запись из буфера в файл

	fclose(file); //закрываем файл

	getchar();

	return 0;


}


